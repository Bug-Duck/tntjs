import{evaluate as t}from"../lib/common.js";import{watchEffect as e}from"../reactivity.js";const r={renderer:(r,s)=>{const o="/* TNT_RENDERED */",i="__tnt_",n={};for(const a in r.props){let p=a;if(p.startsWith(i)&&(p=p.slice(i.length)),p.startsWith(":")||p.startsWith("on"))if(p.startsWith("on")){if(r.props[a].startsWith(o))continue;const t=i+p;let e="";for(const t in s)e+=`const ${t} = ${JSON.stringify(s[t])}; `;const c=`${o} with (window.data) {${e}${r.props[t in r.props?t:p].toString()}}`;n[t]=r.props[a],r.el.setAttribute(p,c),r.props[p]=c}else a.startsWith(":on")&&console.warn("[TNT warn] Using reactive binding and event listeners at the same time will cause the program to run not as expected.","Please extract logic or remove one of the effect bindings."),r.el.removeAttribute(a),e((()=>{r.el.setAttribute(a.slice(1),t(r.props[a],s))}))}for(const t in n)r.el.setAttribute(t,n[t]),r.props[t]=n[t];return!0},name:"attributeRenderer",shouldFire(t){for(const e in t.props)if(e.startsWith(":")||e.startsWith("on"))return!0;return!1}};export{r as default};
//# sourceMappingURL=attributeRenderer.js.map
