import{evaluate as e}from"../lib/common.js";import{watchEffect as r}from"../reactivity.js";const t=["t-if","t-elif"],n=["t-if","t-elif","t-else"],o=(t,n)=>{let o=!1,l=!1;return r((()=>{const r=e(t.props.cond,n);o=!!r,l=o,o!==l&&(t.props.rendered="false"),t.props.rendered=o.toString()})),o},l=(n,o,l,d)=>{let s=!1;const i=l.children[l.children.length-1];return!(d-1==0||!t.includes(i.tag)||"true"===i.props.rendered)&&(r((()=>{const r=e(n.props.cond,o);s=!!r,n.props.rendered=s.toString()})),s)},d=(n,o,l,d)=>{let s=!1;const i=l.children[l.children.length-1];return!(d-1==0||!t.includes(i.tag))&&(r((()=>{console.log("else!!!!!!");const r=e(i.props.cond,o);s=!r,n.props.rendered=s.toString()})),s)},s={renderer:(e,r,t,n)=>{let s=null;return s="t-if"===e.tag?o:"t-elif"===e.tag?l:d,s(e,r,t,n)},name:"conditionRenderer",shouldFire:e=>n.includes(e.tag)};export{n as CONDITION_TAGS,t as TAGS_WITH_CONDITION,s as default};
//# sourceMappingURL=conditionRenderer.js.map
