import e from"./renderers/index.js";const t=(e,t={},r,n)=>({tag:e,props:t,children:r,el:n}),r=(t,n,o={})=>{const i=t.el=document.createElement(t.tag);for(const e in t.props){const r=t.props[e];i.setAttribute(e,r)}return e.renderers.forEach((e=>{e.fireOnMounted&&e.shouldFire(t)&&e.renderer(t,o)})),"string"==typeof t.children?(i.textContent=t.children,void n.appendChild(i)):(t.children.forEach((e=>{"string"!=typeof e?r(e,i,o):i.appendChild(document.createTextNode(e))})),n.appendChild(i),n)},n=(e,t,o={})=>{if(e.tag===t.tag){const i=t.el=e.el,d=e.props||{},s=t.props||{};for(const e in s){const t=d[e],r=s[e];r!==t&&i.setAttribute(e,r)}for(const e in d)e in s||i.removeAttribute(e);const l=e.children,c=t.children,h=Math.min(l.length,c.length);for(let e=0;e<h;e++){const t=l[e],r=c[e];"string"!=typeof t||"string"!=typeof r?n(t,r,o):t!==r&&i.replaceChild(document.createTextNode(r),i.childNodes[e])}return c.length>l.length?void c.slice(l.length).forEach((e=>{"string"!=typeof e?r(e,i,o):i.appendChild(document.createTextNode(e))})):c.length<l.length?void l.slice(c.length).forEach(((e,t)=>{"string"!=typeof e?i.removeChild(e.el):i.removeChild(i.childNodes[t])})):void 0}throw new Error("Replacing root elements are not supported.")},o=e=>{const t={};for(let r=0;r<e.attributes.length;r++){const n=e.attributes[r].value;t[e.attributes[r].name]=n}return t},i=(r,n,d={})=>{[...n.childNodes].forEach(((n,s)=>{if(n.nodeType===Node.TEXT_NODE){if(!n.textContent.trim())return;return void r.children.push(n.textContent)}if(n.nodeType!==Node.ELEMENT_NODE)return;let l=!0,c=d;const h=t(n.tagName.toLowerCase(),o(n),[]);h.el=n,e.renderers.forEach((e=>{if(!e.shouldFire(h))return;const t=e.renderer(h,c,r,s);"boolean"!=typeof t?(l=t.shouldRender||l,c=Object.assign(Object.assign({},c),t.injectVariables)):l=t?l:t})),l&&i(h,n,c),r.children.push(h)}))},d=e=>t(e.tagName.toLowerCase(),o(e),[],e);export{d as createVNodeFromElement,i as createVdomFromExistingElement,o as getAttributesOfElement,t as h,r as mount,n as patch};
//# sourceMappingURL=vdom.js.map
