{"version":3,"file":"tnt.min.js","sources":["../node_modules/tslib/tslib.es6.js","../src/lib/common.ts","../src/reactivity.ts","../src/renderers/conditionRenderer.ts","../src/renderers/loopRenderer.ts","../src/renderers/index.ts","../src/renderers/variableRenderer.ts","../src/renderers/attributeRenderer.ts","../src/renderers/getRenderer.ts","../src/vdom.ts","../src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Deep clone an object.\n * @param obj Object to clone.\n * @returns Deep cloned object.\n */\nexport const deepClone = (obj: any) => {\n  const newObj: any = {};\n  for (const key in obj) {\n    if (Array.isArray(obj[key])) {\n      const newArr = [];\n      obj[key].forEach((val) => {\n        if (typeof val === \"object\") newArr.push(deepClone(val));\n        else newArr.push(val);\n      });\n      newObj[key] = newArr;\n      continue;\n    }\n    if (typeof obj[key] === \"object\" && !obj[key].tagName) {\n      newObj[key] = deepClone(obj[key]);\n      continue;\n    }\n    newObj[key] = obj[key];\n  }\n  return newObj;\n};\n\n/**\n * Evaluate an expression.\n * @param expression Expression to evaluate its value.\n * @param extraContext Some extra context to inject.\n * @param shouldExecuate Whether or not to execuate the generated function.\n * @returns Evaluated result or error message.\n */\nexport const evaluate = (\n  expression: string,\n  extraContext = {},\n  shouldExecuate = true\n) => {\n  let extraContextEval = \"\";\n  for (const key in extraContext) {\n    extraContextEval += `const ${key} = ${\n      typeof extraContext[key] === \"string\"\n        ? '\"' + extraContext[key] + '\"'\n        : JSON.stringify(extraContext[key])\n    }; `;\n  }\n  try {\n    const func = Function(\n      \"ctx\",\n      `with(window.data) {${extraContextEval}; return ${expression};}`\n    );\n    return shouldExecuate ? func(extraContext) : func;\n  } catch (e) {\n    return e.toString();\n  }\n};\n","/** An effect to be ran when its dependencies change. */\nexport type EffectType = () => void;\n/** Objects that can be reactive. */\nexport type ReactiveType = object;\n/** Map to store reactive object - dependencies - effects data. */\ntype TargetMap = WeakMap<ReactiveType, Map<string, Set<EffectType>>>;\n\n/** Currently active running effects. */\nconst activeEffects: EffectType[] = [];\n/** {@inheritDoc TargetMap} */\nexport const targetMap: TargetMap = new WeakMap<TargetMap>();\n\n/** Callbasks when a trackable object changes. */\ninterface TrackableCallback {\n  onGet: (target: ReactiveType, key: string, receiver: any) => void;\n  onSet: (\n    target: ReactiveType,\n    key: string,\n    value: ReactiveType,\n    receiver: any\n  ) => void;\n  onDeleteProperty: (target: ReactiveType, key: string) => void;\n}\n\n/**\n * Get a trackable proxy object and fire certain callbacks on certain events.\n * @param obj The object to track updates.\n * @param callbacks Callbacks to run when certain event was fired.\n * @returns A proxy to the original object.\n */\nexport const getTrackableObject = (\n  obj: ReactiveType,\n  callbacks: TrackableCallback\n) => {\n  for (const key in obj) {\n    if (typeof obj[key] === \"object\") {\n      obj[key] = getTrackableObject(obj[key], callbacks);\n    }\n  }\n  const proxy = new Proxy(obj, {\n    get(target: ReactiveType, key: string, receiver: any) {\n      const result = Reflect.get(target, key, receiver);\n      callbacks.onGet(target, key, receiver);\n      return result;\n    },\n    set(target: ReactiveType, key: string, value: object, receiver: any) {\n      if (typeof value === \"object\") {\n        value = getTrackableObject(value, callbacks);\n      }\n      const result = Reflect.set(target, key, value, receiver);\n      callbacks.onSet(target, key, value, receiver);\n      return result;\n    },\n    deleteProperty(target: ReactiveType, key: string) {\n      const result = Reflect.deleteProperty(target, key);\n      callbacks.onDeleteProperty(target, key);\n      return result;\n    },\n  });\n  if (Array.isArray(obj)) {\n    Object.setPrototypeOf(proxy, Array.prototype);\n  }\n  return proxy;\n};\n\n/**\n * Track the current running effect's dependencies.\n * @param target The reactive object to track.\n * @param key The key to fetch data from.\n */\nexport const track = (target: object, key: string) => {\n  if (!activeEffects.length) return;\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n    depsMap = new Map();\n    targetMap.set(target, depsMap);\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n    // using set assures that no duplicate effects will be stored\n    dep = new Set();\n    depsMap.set(key, dep);\n  }\n  activeEffects.forEach((effect) => dep.add(effect));\n};\n\n/**\n * Trigger effects of certain dependencies.\n * @param target The reactive object to trigger effects.\n * @param key The key to fetch dependencies from.\n */\nexport const trigger = (target: ReactiveType, key: string) => {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) return;\n  const deps = depsMap.get(key);\n  if (!deps) return;\n\n  deps.forEach((effect) => {\n    effect();\n  });\n};\n\n/**\n * Watch an effect's dependencies.\n * @param effect Effect to run when its dependencies changed.\n */\nexport const watchEffect = (effect: EffectType) => {\n  activeEffects.push(effect);\n  effect();\n  activeEffects.pop();\n};\n\n/**\n * Create a reactive object and enable two-way auto update.\n * @param target The object to be made reactive.\n * @returns The proxied reactive object.\n */\nexport const reactive = (target: ReactiveType) => {\n  return getTrackableObject(target, {\n    onGet(target, key) {\n      track(target, key);\n    },\n    onSet(target, key) {\n      trigger(target, key);\n    },\n    onDeleteProperty() {},\n  });\n};\n\n/**\n * Create a reactive reference to a plain value.\n * @param raw A raw value to be reactive.\n * @returns The proxied object with `.value` getters and setters.\n */\nexport const ref = (raw: ReactiveType) => {\n  const r = {\n    get value() {\n      track(r, \"value\");\n      return raw;\n    },\n    set value(newVal) {\n      if (newVal === raw) return;\n      raw = newVal;\n      trigger(r, \"value\");\n    },\n  };\n  return r;\n};\n\n/**\n * Create a reactive computed value.\n * @note `computed` is built on top of {@link ref} API. Any updates must be using `.value` accessor.\n * @param getter Function to calculate the computed value.\n * @returns A reference object to the computed value.\n */\nexport const computed = (getter: () => ReactiveType) => {\n  const result = ref(null);\n  watchEffect(() => (result.value = getter()));\n  return result;\n};\n","import { evaluate } from \"../lib/common\";\nimport { watchEffect } from \"../reactivity\";\nimport { VNode } from \"../vdom\";\nimport { Renderer } from \"./index\";\n\n/** Condition tags with `props.cond` property. */\nexport const TAGS_WITH_CONDITION = [\"t-if\", \"t-elif\"];\n/** All condition tags, discarding its actual condition. */\nexport const CONDITION_TAGS = [\"t-if\", \"t-elif\", \"t-else\"];\n\n/**\n * Render a `<t-if />` element.\n * This renderer will render its children if `currentNode.props.cond` returns a truthy value, not rendering otherwise.\n * @param currentNode Current node to check condition.\n * @param extraContext Some extra variable context to inject.\n * @returns Whether should continue to render currentNode's children.\n */\nconst ifRenderer = (currentNode: VNode, extraContext: object) => {\n  let shouldRender = false;\n  watchEffect(() => {\n    const result = evaluate(currentNode.props.cond, extraContext);\n    shouldRender = !!result;\n    currentNode.props.rendered = shouldRender.toString();\n  });\n  return shouldRender;\n};\n\n/**\n * Render a `<t-elif />` element.\n * This renderer will only render `currentNode`'s children if its previous element sibling is a `<t-if />` or `<t-elif />`\n * and its previoud element's condition is a falsy value.\n * @param currentNode Current node to render.\n * @param extraContext Some extra variable context to inject.\n * @param rootVNode The root VNode of `currentNode`.\n * @param index The position of `currentNode` in `rootVNode.children`.\n * @returns Whether to continue to render currentNode's children nodes.\n */\nconst elifRenderer = (\n  currentNode: VNode,\n  extraContext: object,\n  rootVNode: VNode,\n  index: number\n) => {\n  let shouldRender = false;\n  const previousElement = (rootVNode.children as VNode[])[\n    rootVNode.children.length - 1\n  ];\n  if (\n    index - 1 === 0 ||\n    !TAGS_WITH_CONDITION.includes(previousElement.tag) ||\n    previousElement.props.rendered === \"true\"\n  )\n    return false;\n  watchEffect(() => {\n    const result = evaluate(currentNode.props.cond, extraContext);\n    shouldRender = !!result;\n    currentNode.props.rendered = shouldRender.toString();\n  });\n  return shouldRender;\n};\n\n/**\n * Render a `<t-else />` element.\n * This renderer will only render if `currentNode`'s previous element is a valid condition element AND its condition\n * is a falsy value.\n * @param currentNode Current node to render.\n * @param extraContext Some extra context to inject.\n * @param rootVNode The root VNode of `currentNode`.\n * @param index The position of `currentNode` in `rootVNode.children`.\n * @returns Whether to continue to render currentNode's children elements.\n */\nconst elseRenderer = (\n  currentNode: VNode,\n  extraContext: object,\n  rootVNode: VNode,\n  index: number\n) => {\n  let shouldRender = false;\n  const previousElement = (rootVNode.children as VNode[])[\n    rootVNode.children.length - 1\n  ];\n  if (index - 1 === 0 || !TAGS_WITH_CONDITION.includes(previousElement.tag))\n    return false;\n  watchEffect(() => {\n    const result = evaluate(previousElement.props.cond, extraContext);\n    shouldRender = !result;\n    currentNode.props.rendered = shouldRender.toString();\n  });\n  return shouldRender;\n};\n\n/**\n * Render condition tags.\n * This renderer will only render if the condition of current element is truthy and its corresponding builtin\n * conditions met the requirements.\n * @see {@link ifRenderer}, {@link elifRenderer}, {@link elseRenderer}\n * @param currentNode Current node to render.\n * @param extraContext Some extra context to inject.\n * @param rootVNode The root VNode of `currentNode`.\n * @param index The position of `currentNode` in `rootVNode.children`.\n * @returns Whether to continue render currentNode's children elements.\n */\nconst conditionRenderer = (\n  currentNode: VNode,\n  extraContext: object,\n  rootVNode: VNode,\n  index: number\n) => {\n  let currentRenderer = null;\n  if (currentNode.tag === \"t-if\") {\n    currentRenderer = ifRenderer;\n  } else if (currentNode.tag === \"t-elif\") {\n    currentRenderer = elifRenderer;\n  } else {\n    currentRenderer = elseRenderer;\n  }\n  return currentRenderer(currentNode, extraContext, rootVNode, index);\n};\n\nconst renderer: Renderer = {\n  renderer: conditionRenderer,\n  name: \"conditionRenderer\",\n  shouldFire(node) {\n    return CONDITION_TAGS.includes(node.tag);\n  },\n};\n\nexport default renderer;\n","import { evaluate } from \"../lib/common\";\nimport {\n  createVdomFromExistingElement,\n  createVNodeFromElement,\n  VNode,\n} from \"../vdom\";\nimport renderers, { Renderer } from \"./index\";\n\n/**\n * Render a `<t-for />` loop.\n * @param currentNode Currently rendering VNode.\n * @param extraContext Some extra context to fill in to the evaluation process.\n * @returns Whether to continue rendering its children or not.\n */\nconst loopRenderer = (currentNode: VNode, extraContext: object) => {\n  const expr = currentNode.props.data.split(\" in \");\n  const localName = expr[0].trim();\n  const loopingValue = evaluate(expr[1].trim(), extraContext);\n  const originalChild: Element = currentNode.el.children[0];\n  currentNode.children = [];\n\n  for (const [index, currentData] of loopingValue.entries()) {\n    const currentChild = createVNodeFromElement(originalChild);\n    // custom rendering logic\n    createVdomFromExistingElement(currentChild, currentChild.el, {\n      ...extraContext,\n      [localName]: currentData,\n    });\n    let shouldRender = true;\n    // FIXME: condition tags in t-for tags will not update reactively with arrays\n    renderers.renderers.forEach((renderer) => {\n      if (!renderer.shouldFire(currentChild)) return;\n      const renderResult = renderer.renderer(\n        currentChild,\n        { ...extraContext, [localName]: currentData },\n        currentNode,\n        index\n      );\n      if (typeof renderResult === \"boolean\") {\n        shouldRender = !renderResult ? renderResult : shouldRender;\n        return;\n      }\n      shouldRender = !renderResult.shouldRender\n        ? renderResult.shouldRender\n        : shouldRender;\n    });\n    if (!shouldRender) continue;\n    (currentNode.children as VNode[]).push(currentChild);\n  }\n\n  // do not render its children since they're already rendered\n  return false;\n};\n\nconst renderer: Renderer = {\n  renderer: loopRenderer,\n  name: \"loopRenderer\",\n  shouldFire(node) {\n    return node.tag === \"t-for\";\n  },\n};\n\nexport default renderer;\n","import { VNode } from \"../vdom\";\nimport variableRenderer from \"./variableRenderer\";\nimport conditionRenderer from \"./conditionRenderer\";\nimport loopRenderer from \"./loopRenderer\";\nimport attributeRenderer from \"./attributeRenderer\";\nimport getRenderer from \"./getRenderer\";\n\n/** Return values for rendered contents. */\nexport interface RenderedContent {\n  /** Weather the current node should render on page. */\n  shouldRender: boolean;\n  /** A collection of variable values to inject into the children renderers. */\n  injectVariables?: Record<string, string>;\n}\n/** A standard renderer model for builtin or custom renderers. */\nexport interface Renderer {\n  /**\n   * The main renderer function.\n   * @param currentNode VNode to render.\n   * @param extraContext Some extra variable context to render the content\n   * @param rootVNode Root VNode of the currently rendering VNode.\n   * @param index The current position of currentNode in rootVNode's children list.\n   * @returns Whether to render currentNode's children elements if returned a boolean, higher level reference elsewise (see {@link RenderedContent}).\n   */\n  renderer: (\n    currentNode: VNode,\n    extraContext: object,\n    rootVNode?: VNode,\n    index?: number\n  ) => boolean | RenderedContent;\n  /** Name of current renderer, only for debugging purposes. */\n  name: string;\n  /**\n   * Function to check whether current node should be called with current renderer.\n   * @param node Current VNode to check.\n   * @returns Whether to call current render function or not.\n   */\n  shouldFire: (node: VNode) => boolean;\n  /** Whether current renderer should be fired on mount stage */\n  fireOnMounted?: boolean;\n}\n\nconst renderers: Renderer[] = [\n  variableRenderer,\n  conditionRenderer,\n  loopRenderer,\n  attributeRenderer,\n  getRenderer,\n];\n\nexport default {\n  /** Builtin renderers. */\n  renderers,\n};\n","import { evaluate } from \"../lib/common\";\nimport { watchEffect } from \"../reactivity\";\nimport { VNode } from \"../vdom\";\nimport { Renderer } from \"./index\";\n\n/**\n * Render a variable (`<v />` tag).\n * @param currentNode Node that need to be rendered.\n * @param extraContext Some extra context to inject.\n * @returns Whether to continue render `currentNode`'s children elements.\n */\nconst variableRenderer = (currentNode: VNode, extraContext: object) => {\n  watchEffect(() => {\n    currentNode.children = [\n      evaluate(currentNode.props.data, extraContext).toString(),\n    ];\n  });\n  return true;\n};\n\nconst renderer: Renderer = {\n  renderer: variableRenderer,\n  name: \"variableRenderer\",\n  shouldFire(node) {\n    return node.tag === \"v\";\n  },\n};\n\nexport default renderer;\n","import { evaluate } from \"../lib/common\";\nimport { watchEffect } from \"../reactivity\";\nimport { VNode } from \"../vdom\";\nimport { Renderer } from \"./index\";\n\n/**\n * Render attribute bindings.\n * @param currentNode Current VNode to render.\n * @param extraContext Some extra context to inject.\n * @returns Whether to continue rendering `currentNode`'s children or not.\n */\nconst attributeRenderer = (currentNode: VNode, extraContext: object) => {\n  const TNT_RENDERED = \"/* TNT_RENDERED */\";\n  const TNT_PRESERVED_PREFIX = \"__tnt_\";\n  const specialListeners: Record<string, any> = {};\n\n  for (const key in currentNode.props) {\n    let realKey = key;\n    if (realKey.startsWith(TNT_PRESERVED_PREFIX))\n      realKey = realKey.slice(TNT_PRESERVED_PREFIX.length);\n    if (!realKey.startsWith(\":\") && !realKey.startsWith(\"on\")) continue;\n\n    if (realKey.startsWith(\"on\")) {\n      if (currentNode.props[key].startsWith(TNT_RENDERED)) continue;\n      const originalKey = TNT_PRESERVED_PREFIX + realKey;\n      let injectContext = \"\";\n      for (const ctx in extraContext)\n        injectContext += `const ${ctx} = ${JSON.stringify(\n          extraContext[ctx]\n        )}; `;\n\n      const script = `${TNT_RENDERED} with (window.data) {${injectContext}${currentNode.props[\n        originalKey in currentNode.props ? originalKey : realKey\n      ].toString()}}`;\n      specialListeners[originalKey] = currentNode.props[key];\n      currentNode.el.setAttribute(realKey, script);\n      currentNode.props[realKey] = script;\n      continue;\n    }\n\n    if (key.startsWith(\":on\")) {\n      console.warn(\n        \"[TNT warn] Using reactive binding and event listeners at the same time will cause the program to run not as expected.\",\n        \"Please extract logic or remove one of the effect bindings.\"\n      );\n    }\n    // original attribute is no longer needed\n    currentNode.el.removeAttribute(key);\n    watchEffect(() => {\n      currentNode.el.setAttribute(\n        key.slice(1),\n        evaluate(currentNode.props[key], extraContext)\n      );\n    });\n  }\n  for (const key in specialListeners) {\n    currentNode.el.setAttribute(key, specialListeners[key]);\n    currentNode.props[key] = specialListeners[key];\n  }\n  return true;\n};\n\nconst renderer: Renderer = {\n  renderer: attributeRenderer,\n  name: \"attributeRenderer\",\n  shouldFire(node) {\n    for (const key in node.props) {\n      if (key.startsWith(\":\") || key.startsWith(\"on\")) return true;\n    }\n    return false;\n  },\n};\n\nexport default renderer;\n","import { reactive } from \"../reactivity\";\nimport { VNode } from \"../vdom\";\nimport { RenderedContent, Renderer } from \"./index\";\n\nconst getRenderer = (\n  currentNode: VNode,\n  extraContext: object\n): RenderedContent => {\n  let buffer: {};\n  // get url datas from src\n  const getUrlResult = currentNode.props.src;\n  const getDatasType = currentNode.props.type;\n  const sendDatas = currentNode.props.data;\n  const httpGetRequest = new XMLHttpRequest();\n  // TODO: improve this request method to async and don't do sync operations on the main thread\n  httpGetRequest.open(\"GET\", getUrlResult, false);\n  if (typeof sendDatas === \"undefined\") {\n    httpGetRequest.send(null);\n  } else {\n    httpGetRequest.send(sendDatas);\n  }\n  if (getDatasType === \"text\") {\n    const datas = httpGetRequest.responseText;\n    currentNode.children = [datas.toString()];\n  } else if (getDatasType === \"json\") {\n    const jsonData = httpGetRequest.responseText;\n    if (!jsonData) return;\n    const data = JSON.parse(jsonData);\n    buffer = reactive(data);\n  }\n  buffer[\"requestData\"] = {\n    text: httpGetRequest.responseText,\n    code: httpGetRequest.status,\n  };\n  return {\n    shouldRender: true,\n    injectVariables: buffer,\n  };\n};\n\nconst renderer: Renderer = {\n  renderer: getRenderer,\n  name: \"getRenderer\",\n  shouldFire(node) {\n    return node.tag === \"t-get\";\n  },\n};\n\nexport default renderer;\n","import renderers from \"./renderers/index\";\n\nexport type VNodeChild = VNode | string;\n\n/** A Virtual Node representation. */\nexport interface VNode {\n  /** Node tag name. */\n  tag: string;\n  /** Node properties */\n  props: Record<string, string>;\n  /** Node children */\n  children: VNodeChild[];\n  /** Actual element in DOM for the current VNode. */\n  el: Element;\n}\n\n/**\n * Constructs a VNode.\n * @param tag Tag name.\n * @param props Tag attributes / properties.\n * @param children Tag children.\n * @param el Tag actual DOM element\n * @returns Constructed Virtual DOM Node.\n */\nexport const h = (\n  tag: string,\n  props: Record<string, string> = {},\n  children: VNodeChild[],\n  el?: Element\n): VNode => {\n  return { tag, props, children, el };\n};\n\n/**\n * Mounts a VNode to an actual DOM element.\n * @param vnode The root VNode to mount with.\n * @param container The container DOM element to contain all generated nodes.\n * @returns The container element with generated nodes appended.\n */\nexport const mount = (\n  vnode: VNode,\n  container: Element,\n  extraContext: object = {}\n) => {\n  const el = (vnode.el = document.createElement(vnode.tag));\n  // processing props\n  for (const key in vnode.props) {\n    const value = vnode.props[key];\n    el.setAttribute(key, value);\n  }\n  renderers.renderers.forEach((renderer) => {\n    if (!renderer.fireOnMounted || !renderer.shouldFire(vnode)) return;\n    renderer.renderer(vnode, extraContext);\n  });\n\n  // processing children\n  if (typeof vnode.children === \"string\") {\n    el.textContent = vnode.children;\n    container.appendChild(el);\n    return;\n  }\n  vnode.children.forEach((child) => {\n    if (typeof child === \"string\") {\n      el.appendChild(document.createTextNode(child));\n      return;\n    }\n    mount(child, el, extraContext);\n  });\n  container.appendChild(el);\n  return container;\n};\n\n/**\n * Patches the current actual element to a new VNode and replace the older one.\n * Note that this function will modify the DOM.\n * @param n1 The old VNode to be replaced.\n * @param n2 The newer VNode to update the current DOM to.\n */\nexport const patch = (n1: VNode, n2: VNode, extraContext: object = {}) => {\n  if (n1.tag === n2.tag) {\n    const el = (n2.el = n1.el);\n    // props\n    const oldProps = n1.props || {};\n    const newProps = n2.props || {};\n    for (const key in newProps) {\n      const oldValue = oldProps[key];\n      const newValue = newProps[key];\n      if (newValue === oldValue) continue;\n      el.setAttribute(key, newValue);\n    }\n    for (const key in oldProps) {\n      if (!(key in newProps)) {\n        el.removeAttribute(key);\n      }\n    }\n\n    // children\n    const oldChildren = n1.children;\n    const newChildren = n2.children;\n    const commonLength = Math.min(oldChildren.length, newChildren.length);\n    for (let i = 0; i < commonLength; i++) {\n      const oldChild = oldChildren[i];\n      const newChild = newChildren[i];\n      if (typeof oldChild === \"string\") {\n        if (typeof newChild === \"string\") {\n          if (oldChild !== newChild) {\n            el.replaceChild(\n              document.createTextNode(newChild),\n              el.childNodes[i]\n            );\n          }\n          continue;\n        }\n      }\n      patch(oldChild as VNode, newChild as VNode, extraContext);\n    }\n    if (newChildren.length > oldChildren.length) {\n      newChildren.slice(oldChildren.length).forEach((child: VNode) => {\n        if (typeof child === \"string\") {\n          el.appendChild(document.createTextNode(child));\n          return;\n        }\n        mount(child, el, extraContext);\n      });\n      return;\n    }\n    if (newChildren.length < oldChildren.length) {\n      oldChildren\n        .slice(newChildren.length)\n        .forEach((child: VNodeChild, index) => {\n          if (typeof child === \"string\") {\n            el.removeChild(el.childNodes[index]);\n            return;\n          }\n          el.removeChild(child.el);\n        });\n      return;\n    }\n    return;\n  }\n  throw new Error(\"Replacing root elements are not supported.\");\n};\n\n/**\n * Helper function to get and convert attributes from an element to use the object structure.\n * @param element The element to get attributes from.\n * @returns Attributes in a single object-like structure.\n */\nexport const getAttributesOfElement = (\n  element: Element\n): Record<string, string> => {\n  const attributes = {};\n  for (let i = 0; i < element.attributes.length; i++) {\n    const value = element.attributes[i].value;\n    const name = element.attributes[i].name;\n    attributes[name] = value;\n  }\n  return attributes;\n};\n\n/**\n * Generates a new VNode from existing elemnt.\n * @param rootVNode The root VNode to append children to.\n * @param container The container element to generate VNodes from.\n * @param extraContext Some extra context data to pass to `evaulate()`.\n */\nexport const createVdomFromExistingElement = (\n  rootVNode: VNode,\n  container: Element,\n  extraContext: object = {}\n) => {\n  [...container.childNodes].forEach((child: Element, index) => {\n    if (child.nodeType === Node.TEXT_NODE) {\n      if (!child.textContent.trim()) return;\n      rootVNode.children.push(child.textContent);\n      return;\n    }\n    // only generate text node and element node\n    if (child.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n    // if (child.closest(\"t-for\")) return;\n    let shouldRender = true;\n    let injectContext = extraContext;\n    const currentNode = h(\n      child.tagName.toLowerCase(),\n      getAttributesOfElement(child),\n      []\n    );\n    currentNode.el = child;\n    // fire renderers\n    renderers.renderers.forEach((renderer) => {\n      if (!renderer.shouldFire(currentNode)) return;\n      const renderResult = renderer.renderer(\n        currentNode,\n        injectContext,\n        rootVNode,\n        index\n      );\n      if (typeof renderResult === \"boolean\") {\n        shouldRender = !renderResult ? renderResult : shouldRender;\n        return;\n      }\n      shouldRender = renderResult.shouldRender || shouldRender;\n      injectContext = { ...injectContext, ...renderResult.injectVariables };\n    });\n    if (shouldRender) {\n      createVdomFromExistingElement(currentNode, child, injectContext);\n    }\n    (rootVNode.children as VNode[]).push(currentNode);\n  });\n};\n\n/**\n * Create a new VNode from the given element.\n * Note: this function will not generate children nodes. To include children generation,\n * please use {@link createVdomFromExistingElement}.\n * @param node Element to create VNode from.\n * @returns The generated VNode object.\n */\nexport const createVNodeFromElement = (node: Element): VNode => {\n  return h(node.tagName.toLowerCase(), getAttributesOfElement(node), [], node);\n};\n","import { deepClone } from \"./lib/common\";\nimport {\n  computed,\n  reactive,\n  ref,\n  track,\n  trigger,\n  watchEffect,\n} from \"./reactivity\";\nimport {\n  createVdomFromExistingElement,\n  getAttributesOfElement,\n  h,\n  mount,\n  patch,\n  VNode,\n} from \"./vdom\";\n\nexport type TNTData = object;\n\nexport type TNTEffect = () => any;\n\nexport type TNTComputed = Record<string, TNTEffect>;\n\n// tweak the Window object a bit to pass type check\ndeclare global {\n  export interface Window {\n    data: TNTData;\n  }\n}\n\n/** Create a new TNTjs application. */\nexport class TNTApp {\n  /** Reactive data object */\n  #reactiveData: object;\n  /** Computed data object */\n  #computedData: object;\n  /** Reference-value data object */\n  #refData: object;\n  /** Helper proxy for watching modifications on data */\n  #dataProxy: object;\n  /** Original data passed into {@link TNTApp.useData()} */\n  #originalData: object;\n  /** Function to run when application was first mounted */\n  #onMounted: (app: TNTApp) => void;\n  /** Helper array for storing currently called `TNTApp.use*` hooks. */\n  #hooksCalled: string[];\n  /** Effects watched in {@link TNTApp.useEffect()} */\n  #watchEffects: TNTEffect[];\n\n  constructor() {\n    this.#onMounted = () => {};\n    this.#hooksCalled = [];\n    this.#computedData = {};\n    this.#reactiveData = {};\n    this.#refData = {};\n    this.#watchEffects = [];\n    this.#originalData = {};\n    window.data = {};\n  }\n\n  /**\n   * Initialize and mount a new TNT Application.\n   * @param container The container element to mount with.\n   * @returns Mounted TNTApp instance.\n   */\n  mount(container: Element) {\n    let isMounted = false;\n    let prevVdom: VNode | null = null;\n    let currentNode = null;\n    this.#hooksCalled.push(\"mount\");\n\n    // app lifecycle loop\n    watchEffect(() => {\n      const currentContainer: Element =\n        currentNode?.el ?? container.children[0];\n      const vnode = h(\n        currentContainer.tagName,\n        getAttributesOfElement(currentContainer),\n        []\n      );\n      vnode.el = currentContainer;\n      createVdomFromExistingElement(vnode, currentContainer, {});\n      currentNode = h(\n        container.tagName,\n        getAttributesOfElement(currentContainer),\n        vnode.children,\n        currentContainer\n      );\n      if (!isMounted) {\n        prevVdom = deepClone(currentNode);\n        mount(prevVdom, container, {});\n        isMounted = true;\n        this.#removeUpdatedElements(container, currentContainer);\n        this.#onMounted(this);\n        return;\n      }\n      const newVdom: VNode = deepClone(currentNode);\n      patch(prevVdom, newVdom, {});\n      prevVdom = deepClone(newVdom);\n      this.#removeUpdatedElements(container, currentContainer);\n    });\n\n    return this;\n  }\n\n  /** All defined reactive / ref data. */\n  get data() {\n    return this.#dataProxy;\n  }\n\n  /**\n   * Generate a new TNT data proxy based on reactive and reference data.\n   * The generated proxy will watch for re-assignments as well as reading values and handle edge cases.\n   * @returns Proxied TNT data object.\n   */\n  #getDataProxy() {\n    type MixedTarget = { reactive: object; computed: object; ref: object };\n\n    const syncData = (target: MixedTarget, prop: string, value: object) => {\n      // edge-case handling for re-assgining arrays\n      if (Array.isArray(value)) {\n        // re-creating the reactive array will drop its former effects\n        // so for work-around this will clear the array and push new elements into it\n        // TODO: improve performance for re-assigning reactive arrays\n        target.reactive[prop].splice(0, target.reactive[prop].length);\n        target.reactive[prop].push(...value);\n      }\n      // manually trigger an update\n      trigger(this.#originalData[prop], prop);\n    };\n\n    const handlers = {\n      get(target: MixedTarget, prop: string | symbol) {\n        if (typeof prop === \"symbol\") return undefined;\n        prop = prop.toString();\n        if (prop in target.reactive) {\n          return target.reactive[prop];\n        }\n        if (prop in target.computed) {\n          return target.computed[prop].value;\n        }\n        if (prop in target.ref) {\n          track(target.ref[prop], \"value\");\n          return target.ref[prop].value;\n        }\n        console.warn(\n          `[TNT warn] You accessed a value not defined (Reading '${prop}').`\n        );\n        return undefined;\n      },\n      set(target: MixedTarget, prop: string, value: object) {\n        if (prop in target.reactive) {\n          syncData(target, prop, value);\n          return true;\n        }\n        if (prop in target.ref) {\n          target.ref[prop].value = value;\n          trigger(target.ref[prop], \"value\");\n          return true;\n        }\n        console.warn(\n          `[TNT warn] You set a value not defined (Reading '${prop}').`\n        );\n        return false;\n      },\n      has(target: MixedTarget, key: string | symbol) {\n        if (typeof key === \"symbol\") {\n          key = key.toString();\n        }\n        if (key in globalThis) return false;\n        return (\n          key in target.ref || key in target.reactive || key in target.computed\n        );\n      },\n    };\n\n    return new Proxy(\n      {\n        reactive: this.#reactiveData,\n        computed: this.#computedData,\n        ref: this.#refData,\n      },\n      handlers\n    );\n  }\n\n  /**\n   * Hook to create reactive data objects.\n   * @param data Data to become reactive.\n   * @returns Current `TNTApp` instance.\n   */\n  useData(data: TNTData) {\n    this.#hooksCalled.push(\"data\");\n    this.#originalData = deepClone(data);\n    this.#reactiveData = {};\n    this.#refData = {};\n    for (const key in data) {\n      if (typeof data[key] === \"object\") {\n        this.#reactiveData[key] = reactive(data[key]);\n        continue;\n      }\n      this.#refData[key] = ref(data[key]);\n    }\n    this.#dataProxy = this.#getDataProxy();\n    window.data = this.#dataProxy;\n    return this;\n  }\n\n  /**\n   * Hook to create computed values with ease.\n   * @param computedValues Functions to calcuate each computed value.\n   * @returns Current `TNTApp` instance.\n   */\n  useComputed(computedValues: TNTComputed) {\n    this.#hooksCalled.push(\"computed\");\n    if (!this.#hooksCalled.includes(\"data\")) {\n      console.warn(\n        \"[TNT warn] useComputed() hook is called before useData(). Any reactive data accessed from computed functions will not be accessable.\",\n        \"This may lead to unpredictable results or errors.\"\n      );\n    }\n    for (const key in computedValues) {\n      this.#computedData[key] = computed(computedValues[key]);\n    }\n    this.#dataProxy = this.#getDataProxy();\n    window.data = this.#dataProxy;\n    return this;\n  }\n\n  /**\n   * Hook to watch effect dependency updates.\n   * @param effect Effect function to watch.\n   * @returns Current `TNTApp` instance.\n   */\n  useEffect(effect: TNTEffect) {\n    this.#hooksCalled.push(\"effect\");\n    this.#watchEffects.push(effect);\n    watchEffect(effect);\n    return this;\n  }\n\n  /**\n   * Run the specified effect when application is mounted.\n   * @param effect Effect to run when application is mounted.\n   * @returns Current `TNTApp` instance.\n   */\n  onMounted(effect: TNTEffect) {\n    this.#onMounted = effect;\n    return this;\n  }\n\n  /**\n   * Remove older child elements.\n   * @param element The root element to check children length.\n   * @param toRemove The child element to remove.\n   */\n  #removeUpdatedElements(element: Element, toRemove: Element) {\n    if (element.children.length > 1) toRemove.remove();\n  }\n}\n\nexport {\n  computed,\n  getTrackableObject,\n  reactive,\n  ref,\n  targetMap,\n  watchEffect,\n  trigger,\n  track,\n} from \"./reactivity\";\nexport { h, mount, patch } from \"./vdom\";\n// export { Router, Route, r } from \"./route\";\n"],"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","deepClone","obj","newObj","key","Array","isArray","newArr","forEach","val","push","tagName","evaluate","expression","extraContext","shouldExecuate","extraContextEval","JSON","stringify","func","Function","e","toString","activeEffects","targetMap","WeakMap","getTrackableObject","callbacks","proxy","Proxy","target","result","Reflect","onGet","onSet","deleteProperty","onDeleteProperty","Object","setPrototypeOf","prototype","track","length","depsMap","Map","dep","Set","effect","add","trigger","deps","watchEffect","pop","reactive","ref","raw","r","newVal","computed","getter","TAGS_WITH_CONDITION","CONDITION_TAGS","ifRenderer","currentNode","shouldRender","props","cond","rendered","elifRenderer","rootVNode","index","previousElement","children","includes","tag","elseRenderer","renderer","expr","data","split","localName","trim","loopingValue","originalChild","el","currentData","entries","currentChild","createVNodeFromElement","createVdomFromExistingElement","assign","renderers","shouldFire","renderResult","name","node","renderers$1","currentRenderer","loopRenderer","TNT_RENDERED","TNT_PRESERVED_PREFIX","specialListeners","realKey","startsWith","slice","originalKey","injectContext","ctx","script","setAttribute","console","warn","removeAttribute","buffer","getUrlResult","src","getDatasType","type","sendDatas","httpGetRequest","XMLHttpRequest","open","send","datas","responseText","jsonData","parse","text","code","status","injectVariables","h","mount","vnode","container","document","createElement","fireOnMounted","textContent","appendChild","child","createTextNode","patch","n1","n2","oldProps","newProps","oldValue","newValue","oldChildren","newChildren","commonLength","Math","min","i","oldChild","newChild","replaceChild","childNodes","removeChild","Error","getAttributesOfElement","element","attributes","nodeType","Node","TEXT_NODE","ELEMENT_NODE","toLowerCase","syncData","prop","splice","this","_TNTApp_originalData","handlers","globalThis","_TNTApp_reactiveData","_TNTApp_computedData","_TNTApp_refData","_TNTApp_removeUpdatedElements","toRemove","remove","constructor","_TNTApp_dataProxy","_TNTApp_onMounted","_TNTApp_hooksCalled","_TNTApp_watchEffects","window","isMounted","prevVdom","currentContainer","_a","newVdom","useData","useComputed","computedValues","useEffect","onMounted"],"mappings":"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"}